// Write a function that takes a parameter, a number. The function should print the Fibonacci sequence up to that number.
// Adjust the function to push the even numbered values into an array.
// Adjust the function to return the summed value of even numbers the array.

//INFO
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

const fibonacci = num => {
    let currentNum = null;
    let fibSeq = [1,1];
    let evenFib = [];
    
    for (let i = 0; i <= num; i++) {
        currentNum = fibSeq[fibSeq.length -1] + fibSeq[fibSeq.length -2]; 
        if (currentNum <= num) {
            if (currentNum % 2 === 0) {
            evenFib.push(currentNum)    
        }
        fibSeq.push(currentNum)
        }
    }
    console.log(fibSeq);
    console.log(evenFib);
    console.log(fibSeq.filter(e => e % 2 === 0))
    console.log(evenFib.reduce((acc, val) => acc + val));
}

fibonacci(22)